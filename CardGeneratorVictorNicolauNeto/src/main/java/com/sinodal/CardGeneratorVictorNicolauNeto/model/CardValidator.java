package com.sinodal.CardGeneratorVictorNicolauNeto.model;

import java.time.YearMonth;

public class CardValidator {

    public static boolean validar(Card card) {
        if (card == null) return false;
        
        // Validar nome do titular
        if (card.getNomeTitular() == null || card.getNomeTitular().trim().isEmpty()) {
            return false;
        }
        if (card.getNomeTitular().length() > 100) {
            return false;
        }
        
        // Validar bandeira
        if (card.getBandeira() == null || card.getBandeira().trim().isEmpty()) {
            return false;
        }
        
        // Accept test cards generated by this app
        try {
            if (card.isTeste()) return true;
        } catch (Exception e) {
            // ignore - compatibility with older Card without the field
        }
        
        // Validar número do cartão
        String num = card.getNumero();
        if (num == null || num.length() != 16) return false;
        if (!num.matches("\\d{16}")) return false; // Apenas dígitos
        
        // Validar CVV
        if (card.getCvv() < 100 || card.getCvv() > 999) return false;
        
        // Validar validade
        if (card.getValidade() == null || !card.getValidade().isAfter(YearMonth.now())) {
            return false;
        }
        
        // Check Luhn algorithm for plausible card numbers
        return luhnCheck(num);
    }

    private static boolean luhnCheck(String ccNumber) {
        int sum = 0;
        boolean alt = false;
        for (int i = ccNumber.length() - 1; i >= 0; i--) {
            int n = Integer.parseInt(ccNumber.substring(i, i + 1));
            if (alt) {
                n *= 2;
                if (n > 9) n = (n % 10) + 1;
            }
            sum += n;
            alt = !alt;
        }
        return (sum % 10 == 0);
    }
}
